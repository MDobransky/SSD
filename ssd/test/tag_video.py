#draw annotations from json file to given video
#uses json generated by detect_video script
#remember to set video FPS in export setup

import argparse
import json

import cv2

parser = argparse.ArgumentParser()
parser.add_argument("--video", default=None, type=str)
parser.add_argument("--detections", default=None, type=str)
parser.add_argument("--fps", default=None, type=int)


args = parser.parse_args()

def color(ann):
    if ann == "PERSON":
        return (250, 100, 15)
    if ann == "CAR":
        return (13, 160, 0)
    if ann == "BUS":
        return (0, 200, 255)
    if ann == "MOTORCYCLE":
        return (200, 0, 200)
    if ann == "BICYCLE":
        return (40, 60, 80)
    if ann == "TRAIN":
        return (0, 0, 0)
    if ann == "TRUCK":
        return (0, 0, 81)

with open(args.detections, "r") as file:
    detections = json.load(file)

input_video = cv2.VideoCapture(args.video)


out_video = cv2.VideoWriter(args.video + '_tagged.mp4', cv2.VideoWriter_fourcc('m', 'p', '4', 'v'), args.fps,
                            (int(input_video.get(3)), int(input_video.get(4))))

frame = 0
while input_video.isOpened():
    success, image = input_video.read()
    if success:
        anns = detections[str(frame)]
        for ann in anns:
            l = ann["left"]
            r = ann["right"]
            t = ann["top"]
            b = ann["bottom"]
            cv2.putText(image, ann["label"] + " " + str(ann["conf"]), (max(l + 5, 5), max(t + 15, 15)), cv2.FONT_HERSHEY_SIMPLEX, 0.8, (85,0,255), 2)
            cv2.rectangle(image, (l, t), (r, b), color(ann["label"]), 3)
        out_video.write(image)
        frame += 1
    else:
        break

input_video.release()
out_video.release()
